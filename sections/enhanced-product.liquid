<div class="enhanced-product-template">
  <div class="container">
    <div class="product-breadcrumbs">
      <a href="/">Home</a> / 
      {% if collection.handle %}
        <a href="{{ collection.url }}">{{ collection.title }}</a> / 
      {% endif %}
      <span>{{ product.title }}</span>
    </div>
    
    <div class="product-container">
      <div class="product-gallery">
        <div class="product-main-image">
          {% if product.featured_media != blank %}
            <img 
              src="{{ product.featured_media | img_url: '1000x' }}" 
              alt="{{ product.featured_media.alt | escape }}"
              id="MainProductImage"
              class="product-featured-image"
            >
            {% if product.tags contains 'new' %}
              <div class="product-badge new">New</div>
            {% elsif product.tags contains 'bestseller' %}
              <div class="product-badge bestseller">Bestseller</div>
            {% elsif product.compare_at_price > product.price %}
              <div class="product-badge sale">Sale</div>
            {% endif %}
          {% else %}
            {{ 'product-1' | placeholder_svg_tag: 'placeholder-svg' }}
          {% endif %}
        </div>
        
        {% if product.media.size > 1 %}
          <div class="product-thumbnails">
            {% for media in product.media %}
              <div class="thumbnail {% if forloop.first %}active{% endif %}" data-media-id="{{ media.id }}">
                <img src="{{ media | img_url: 'small' }}" alt="{{ media.alt | escape }}">
              </div>
            {% endfor %}
          </div>
        {% endif %}
      </div>
      
      <div class="product-info">
        <div class="product-vendor">{{ product.vendor }}</div>
        <h1 class="product-title">{{ product.title }}</h1>
        
        {% if product.metafields.reviews.rating %}
          <div class="product-rating">
            <div class="stars" style="--rating: {{ product.metafields.reviews.rating.value }};">
              <span>★★★★★</span>
            </div>
            <span class="rating-count">({{ product.metafields.reviews.rating_count }})</span>
          </div>
        {% endif %}
        
        <div class="product-price">
          {% if product.compare_at_price > product.price %}
            <span class="sale-price">{{ product.price | money }}</span>
            <span class="compare-price">{{ product.compare_at_price | money }}</span>
            <span class="save-amount">Save {{ product.compare_at_price | minus: product.price | money }}</span>
          {% else %}
            <span class="regular-price">{{ product.price | money }}</span>
          {% endif %}
        </div>
        
        <div class="product-short-description">
          {{ product.description | strip_html | truncatewords: 30 }}
        </div>
        
        {% form 'product', product, id: 'ProductForm', class: 'product-form' %}
          <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}" id="ProductVariantId">
          
          {% if product.has_only_default_variant == false %}
            <div class="product-variants">
              {% for option in product.options_with_values %}
                <div class="product-option">
                  <label for="Option-{{ forloop.index }}">{{ option.name }}</label>
                  
                  {% if section.settings.variant_style == 'buttons' and option.name == 'Color' %}
                    <div class="color-option-buttons">
                      {% for value in option.values %}
                        <div 
                          class="color-option {% if option.selected_value == value %}selected{% endif %}" 
                          data-option-position="{{ forloop.index0 }}"
                          data-value="{{ value | escape }}"
                          style="background-color: {{ value | downcase | replace: ' ', '' }};"
                          title="{{ value }}"
                        ></div>
                      {% endfor %}
                    </div>
                    <input type="hidden" name="options[{{ option.name | escape }}]" id="Option-{{ forloop.index }}" value="{{ option.selected_value }}">
                  {% elsif section.settings.variant_style == 'buttons' and option.name == 'Size' %}
                    <div class="size-option-buttons">
                      {% for value in option.values %}
                        <div 
                          class="size-option {% if option.selected_value == value %}selected{% endif %}" 
                          data-option-position="{{ forloop.index0 }}"
                          data-value="{{ value | escape }}"
                        >
                          {{ value }}
                        </div>
                      {% endfor %}
                    </div>
                    <input type="hidden" name="options[{{ option.name | escape }}]" id="Option-{{ forloop.index }}" value="{{ option.selected_value }}">
                  {% else %}
                    <select 
                      id="Option-{{ forloop.index }}"
                      name="options[{{ option.name | escape }}]"
                      class="variant-select"
                      data-option-position="{{ forloop.index0 }}"
                    >
                      {% for value in option.values %}
                        <option 
                          value="{{ value | escape }}"
                          {% if option.selected_value == value %}selected="selected"{% endif %}
                        >
                          {{ value }}
                        </option>
                      {% endfor %}
                    </select>
                  {% endif %}
                </div>
              {% endfor %}
            </div>
          {% endif %}
          
          <div class="product-quantity">
            <label for="Quantity">Quantity</label>
            <div class="quantity-selector">
              <button type="button" class="quantity-btn minus">-</button>
              <input 
                type="number" 
                id="Quantity" 
                name="quantity" 
                value="1" 
                min="1" 
                class="quantity-input"
              >
              <button type="button" class="quantity-btn plus">+</button>
            </div>
          </div>
          
          {% if section.settings.enable_order_booking %}
          <div class="order-booking-options">
            <h3 class="booking-title">Order Booking Options</h3>
            
            <div class="delivery-date-picker">
              <label for="DeliveryDate">Delivery Date</label>
              <input 
                type="date" 
                id="DeliveryDate" 
                name="properties[Delivery Date]" 
                class="date-input"
                min="{{ 'now' | date: '%Y-%m-%d' }}"
                required
              >
              <p class="delivery-note">Please select your preferred delivery date</p>
            </div>
            
            {% if section.settings.show_time_slots %}
            <div class="delivery-time-slot">
              <label for="DeliveryTime">Delivery Time Slot</label>
              <select id="DeliveryTime" name="properties[Delivery Time]" required>
                <option value="">Select a time slot</option>
                <option value="Morning (9am - 12pm)">Morning (9am - 12pm)</option>
                <option value="Afternoon (12pm - 3pm)">Afternoon (12pm - 3pm)</option>
                <option value="Evening (3pm - 6pm)">Evening (3pm - 6pm)</option>
              </select>
            </div>
            {% endif %}
            
            {% if section.settings.enable_gift_option %}
            <div class="gift-option">
              <label class="gift-checkbox-label">
                <input type="checkbox" id="GiftOption" name="properties[Is Gift]" value="Yes">
                <span class="checkbox-custom"></span>
                This is a gift
              </label>
              
              <div class="gift-message-container" style="display: none;">
                <label for="GiftMessage">Gift Message</label>
                <textarea 
                  id="GiftMessage" 
                  name="properties[Gift Message]" 
                  placeholder="Enter your gift message here..."
                  maxlength="200"
                  rows="3"
                ></textarea>
              </div>
            </div>
            {% endif %}
          </div>
          {% endif %}
          
          <div class="product-actions">
            <button 
              type="submit" 
              name="add" 
              id="AddToCart"
              class="btn primary-btn add-to-cart"
              {% unless product.available %}disabled{% endunless %}
            >
              <span class="btn-text">
                {% if product.available %}
                  {{ section.settings.add_to_cart_text | default: 'Add to Cart' }}
                {% else %}
                  Sold Out
                {% endif %}
              </span>
              <span class="btn-loading" aria-hidden="true">
                <svg class="spinner" viewBox="0 0 50 50">
                  <circle class="path" cx="25" cy="25" r="20" fill="none" stroke-width="5"></circle>
                </svg>
              </span>
            </button>
            
            {% if section.settings.enable_buy_now and product.available %}
              <button 
                type="submit" 
                name="checkout" 
                class="btn secondary-btn buy-now"
              >
                {{ section.settings.buy_now_text | default: 'Buy Now' }}
              </button>
            {% endif %}
            
            <button type="button" class="wishlist-btn" aria-label="Add to Wishlist">
              <i class="far fa-heart"></i>
            </button>
          </div>
        {% endform %}
        
        <div class="product-details">
          {% if section.settings.show_shipping_info %}
            <div class="shipping-info">
              <div class="info-item">
                <div class="info-icon">
                  <i class="fas fa-truck"></i>
                </div>
                <div class="info-text">
                  <strong>Free Shipping</strong>
                  <p>On orders over {{ section.settings.free_shipping_threshold | default: '$50' }}</p>
                </div>
              </div>
              
              <div class="info-item">
                <div class="info-icon">
                  <i class="fas fa-undo"></i>
                </div>
                <div class="info-text">
                  <strong>Easy Returns</strong>
                  <p>{{ section.settings.return_days | default: '30' }} day return policy</p>
                </div>
              </div>
              
              <div class="info-item">
                <div class="info-icon">
                  <i class="fas fa-shield-alt"></i>
                </div>
                <div class="info-text">
                  <strong>Secure Checkout</strong>
                  <p>SSL Encrypted checkout</p>
                </div>
              </div>
            </div>
          {% endif %}
          
          <div class="product-accordion">
            <div class="accordion-item">
              <button class="accordion-header" aria-expanded="false">
                <span>Description</span>
                <i class="fas fa-chevron-down"></i>
              </button>
              <div class="accordion-content">
                <div class="product-description">
                  {{ product.description }}
                </div>
              </div>
            </div>
            
            {% if product.metafields.custom.specifications %}
              <div class="accordion-item">
                <button class="accordion-header" aria-expanded="false">
                  <span>Specifications</span>
                  <i class="fas fa-chevron-down"></i>
                </button>
                <div class="accordion-content">
                  {{ product.metafields.custom.specifications }}
                </div>
              </div>
            {% endif %}
            
            {% if product.metafields.custom.shipping %}
              <div class="accordion-item">
                <button class="accordion-header" aria-expanded="false">
                  <span>Shipping & Returns</span>
                  <i class="fas fa-chevron-down"></i>
                </button>
                <div class="accordion-content">
                  {{ product.metafields.custom.shipping }}
                </div>
              </div>
            {% endif %}
          </div>
          
          <div class="product-meta">
            {% if product.type != blank %}
              <div class="meta-item">
                <span class="meta-label">Type:</span>
                <span class="meta-value">{{ product.type }}</span>
              </div>
            {% endif %}
            
            {% if product.tags.size > 0 %}
              <div class="meta-item">
                <span class="meta-label">Tags:</span>
                <span class="meta-value">
                  {% for tag in product.tags %}
                    {{ tag }}{% unless forloop.last %}, {% endunless %}
                  {% endfor %}
                </span>
              </div>
            {% endif %}
            
            <div class="meta-item">
              <span class="meta-label">Share:</span>
              <div class="social-sharing">
                <a href="https://www.facebook.com/sharer.php?u={{ shop.url | append: product.url }}" target="_blank" rel="noopener" aria-label="Share on Facebook">
                  <i class="fab fa-facebook-f"></i>
                </a>
                <a href="https://twitter.com/share?text={{ product.title | url_encode }}&url={{ shop.url | append: product.url | url_encode }}" target="_blank" rel="noopener" aria-label="Share on Twitter">
                  <i class="fab fa-twitter"></i>
                </a>
                <a href="https://pinterest.com/pin/create/button/?url={{ shop.url | append: product.url | url_encode }}&media={{ product.featured_image | img_url: 'large' | url_encode }}&description={{ product.description | strip_html | truncate: 150 | url_encode }}" target="_blank" rel="noopener" aria-label="Pin on Pinterest">
                  <i class="fab fa-pinterest-p"></i>
                </a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Quantity selector
    const quantityBtns = document.querySelectorAll('.quantity-btn');
    if (quantityBtns.length > 0) {
      quantityBtns.forEach(button => {
        button.addEventListener('click', function() {
          const input = this.parentNode.querySelector('.quantity-input');
          const currentValue = parseInt(input.value);
          
          if (this.classList.contains('minus') && currentValue > 1) {
            input.value = currentValue - 1;
          } else if (this.classList.contains('plus')) {
            input.value = currentValue + 1;
          }
        });
      });
    }
    
    // Thumbnail image switching
    const thumbnails = document.querySelectorAll('.thumbnail');
    if (thumbnails.length > 0) {
      thumbnails.forEach(thumbnail => {
        thumbnail.addEventListener('click', function() {
          const mainImage = document.getElementById('MainProductImage');
          const newSrc = this.querySelector('img').src.replace('small', '1000x');
          
          // Update active state
          thumbnails.forEach(t => t.classList.remove('active'));
          this.classList.add('active');
          
          // Update main image with fade effect
          mainImage.style.opacity = '0';
          setTimeout(() => {
            mainImage.src = newSrc;
            mainImage.style.opacity = '1';
          }, 300);
        });
      });
    }
    
    // Variant selection
    const variantSelects = document.querySelectorAll('.variant-select');
    const colorOptions = document.querySelectorAll('.color-option');
    const sizeOptions = document.querySelectorAll('.size-option');
    
    // Handle dropdown variant selectors
    if (variantSelects.length > 0) {
      variantSelects.forEach(select => {
        select.addEventListener('change', function() {
          updateVariantSelection();
        });
      });
    }
    
    // Handle color option buttons
    if (colorOptions.length > 0) {
      colorOptions.forEach(option => {
        option.addEventListener('click', function() {
          const value = this.getAttribute('data-value');
          const position = this.getAttribute('data-option-position');
          const hiddenInput = document.querySelector(`input[name="options[Color]"]`);
          
          colorOptions.forEach(o => o.classList.remove('selected'));
          this.classList.add('selected');
          
          if (hiddenInput) {
            hiddenInput.value = value;
          }
          
          updateVariantSelection();
        });
      });
    }
    
    // Handle size option buttons
    if (sizeOptions.length > 0) {
      sizeOptions.forEach(option => {
        option.addEventListener('click', function() {
          const value = this.getAttribute('data-value');
          const position = this.getAttribute('data-option-position');
          const hiddenInput = document.querySelector(`input[name="options[Size]"]`);
          
          sizeOptions.forEach(o => o.classList.remove('selected'));
          this.classList.add('selected');
          
          if (hiddenInput) {
            hiddenInput.value = value;
          }
          
          updateVariantSelection();
        });
      });
    }
    
    // Update variant selection based on selected options
    function updateVariantSelection() {
      // This is a simplified version. In a real implementation, you would need to match
      // the selected options to the available variants and update the price, availability, etc.
      console.log('Variant selection updated');
    }
    
    // Gift option toggle
    const giftOption = document.getElementById('GiftOption');
    const giftMessageContainer = document.querySelector('.gift-message-container');
    
    if (giftOption && giftMessageContainer) {
      giftOption.addEventListener('change', function() {
        if (this.checked) {
          giftMessageContainer.style.display = 'block';
        } else {
          giftMessageContainer.style.display = 'none';
        }
      });
    }
    
    // Accordion functionality
    const accordionHeaders = document.querySelectorAll('.accordion-header');
    
    if (accordionHeaders.length > 0) {
      accordionHeaders.forEach(header => {
        header.addEventListener('click', function() {
          const content = this.nextElementSibling;
          const isExpanded = this.getAttribute('aria-expanded') === 'true';
          
          this.setAttribute('aria-expanded', !isExpanded);
          
          if (isExpanded) {
            content.style.maxHeight = null;
          } else {
            content.style.maxHeight = content.scrollHeight + 'px';
          }
        });
      });
      
      // Open the first accordion by default
      if (accordionHeaders[0]) {
        accordionHeaders[0].click();
      }
    }
    
    // Add to cart functionality
    const addToCartForm = document.getElementById('ProductForm');
    
    if (addToCartForm) {
      addToCartForm.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const submitButton = this.querySelector('.add-to-cart');
        const formData = new FormData(this);
        
        // Check if delivery date is required and provided
        const deliveryDateInput = document.getElementById('DeliveryDate');
        const deliveryTimeInput = document.getElementById('DeliveryTime');
        
        if (deliveryDateInput && deliveryDateInput.required && !deliveryDateInput.value) {
          alert('Please select a delivery date');
          return;
        }
        
        if (deliveryTimeInput && deliveryTimeInput.required && !deliveryTimeInput.value) {
          alert('Please select a delivery time slot');
          return;
        }
        
        // Show loading state
        submitButton.classList.add('loading');
        
        // Add to cart using Fetch API
        fetch('/cart/add.js', {
          method: 'POST',
          body: formData
        })
        .then(response => response.json())
        .then(data => {
          // Success - update cart count
          submitButton.classList.remove('loading');
          submitButton.classList.add('success');
          submitButton.querySelector('.btn-text').textContent = 'Added!';
          
          // Update cart count
          fetch('/cart.js')
            .then(res => res.json())
            .then(cart => {
              const cartCountElement = document.querySelector('.cart-count');
              if (cartCountElement) {
                cartCountElement.textContent = cart.item_count;
                cartCountElement.classList.add('updated');
                setTimeout(() => cartCountElement.classList.remove('updated'), 1000);
              }
            });
          
          // Reset button after delay
          setTimeout(() => {
            submitButton.classList.remove('success');
            submitButton.querySelector('.btn-text').textContent = 
              '{{ section.settings.add_to_cart_text | default: "Add to Cart" }}';
          }, 2000);
        })
        .catch(error => {
          // Error handling
          console.error('Error adding product to cart:', error);
          submitButton.classList.remove('loading');
          submitButton.classList.add('error');
          submitButton.querySelector('.btn-text').textContent = 'Error';
          
          setTimeout(() => {
            submitButton.classList.remove('error');
            submitButton.querySelector('.btn-text').textContent = 
              '{{ section.settings.add_to_cart_text | default: "Add to Cart" }}';
          }, 2000);
        });
      });
    }
    
    // Wishlist functionality
    const wishlistBtn = document.querySelector('.wishlist-btn');
    if (wishlistBtn) {
      wishlistBtn.addEventListener('click', function() {
        this.classList.toggle('active');
        const icon = this.querySelector('i');
        if (icon.classList.contains('far')) {
          icon.classList.remove('far');
          icon.classList.add('fas');
        } else {
          icon.classList.remove('fas');
          icon.classList.add('far');
        }
      });
    }
  });
</script>

<style>
  .enhanced-product-template {
    padding: 40px 0;
  }
  
  .product-breadcrumbs {
    margin-bottom: 20px;
    font-size: 14px;
    color: var(--light-text);
  }
  
  .product-breadcrumbs a {
    color: var(--light-text);
    text-decoration: none;
  }
  
  .product-breadcrumbs a:hover {
    color: var(--primary-pink);
  }
  
  .product-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 40px;
  }
  
  .product-gallery {
    position: relative;
  }
  
  .product-main-image {
    position: relative;
    margin-bottom: 15px;
    border-radius: 8px;
    overflow: hidden;
  }
  
  .product-featured-image {
    width: 100%;
    height: auto;
    display: block;
    transition: opacity 0.3s ease;
  }
  
  .product-badge {
    position: absolute;
    top: 15px;
    left: 15px;
    padding: 5px 10px;
    border-radius: 20px;
    font-size: 12px;
    font-weight: 500;
    text-transform: uppercase;
    color: white;
    z-index: 2;
  }
  
  .product-badge.new {
    background-color: var(--primary-pink);
  }
  
  .product-badge.bestseller {
    background-color: #ffa500;
  }
  
  .product-badge.sale {
    background-color: #e53935;
  }
  
  .product-thumbnails {
    display: flex;
    gap: 10px;
    flex-wrap: wrap;
  }
  
  .thumbnail {
    width: 70px;
    height: 70px;
    border-radius: 4px;
    overflow: hidden;
    cursor: pointer;
    border: 2px solid transparent;
    transition: border-color 0.2s ease;
  }
  
  .thumbnail.active {
    border-color: var(--primary-pink);
  }
  
  .thumbnail img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  .product-info {
    display: flex;
    flex-direction: column;
    gap: 15px;
  }
  
  .product-vendor {
    font-size: 14px;
    text-transform: uppercase;
    color: var(--light-text);
    letter-spacing: 1px;
  }
  
  .product-title {
    font-size: 28px;
    margin: 0;
    line-height: 1.2;
  }
  
  .product-rating {
    display: flex;
    align-items: center;
    gap: 5px;
    margin-bottom: 10px;
  }
  
  .stars {
    position: relative;
    display: inline-block;
    color: #ddd;
    font-size: 18px;
  }
  
  .stars::before {
    content: "★★★★★";
    position: absolute;
    top: 0;
    left: 0;
    color: #ffc107;
    width: calc(var(--rating) * 20%);
    overflow: hidden;
  }
  
  .rating-count {
    font-size: 14px;
    color: var(--light-text);
  }
  
  .product-price {
    display: flex;
    align-items: center;
    gap: 10px;
    margin-bottom: 10px;
  }
  
  .sale-price {
    font-size: 24px;
    font-weight: 600;
    color: var(--primary-pink);
  }
  
  .compare-price {
    font-size: 18px;
    text-decoration: line-through;
    color: var(--light-text);
  }
  
  .regular-price {
    font-size: 24px;
    font-weight: 600;
  }
  
  .save-amount {
    font-size: 14px;
    background-color: var(--primary-pink);
    color: white;
    padding: 2px 8px;
    border-radius: 12px;
  }
  
  .product-short-description {
    margin-bottom: 20px;
    color: var(--light-text);
    line-height: 1.6;
  }
  
  .product-form {
    display: flex;
    flex-direction: column;
    gap: 20px;
    margin-bottom: 30px;
  }
  
  .product-variants {
    display: flex;
    flex-direction: column;
    gap: 15px;
  }
  
  .product-option {
    margin-bottom: 15px;
  }
  
  .product-option label {
    display: block;
    margin-bottom: 8px;
    font-weight: 500;
  }
  
  .variant-select {
    width: 100%;
    padding: 10px;
    border: 1px solid var(--medium-gray);
    border-radius: 4px;
    font-size: 16px;
  }
  
  .color-option-buttons {
    display: flex;
    gap: 10px;
    flex-wrap: wrap;
  }
  
  .color-option {
    width: 30px;
    height: 30px;
    border-radius: 50%;
    cursor: pointer;
    border: 2px solid transparent;
    transition: transform 0.2s ease;
  }
  
  .color-option.selected {
    border-color: var(--primary-pink);
    transform: scale(1.1);
  }
  
  .size-option-buttons {
    display: flex;
    gap: 10px;
    flex-wrap: wrap;
  }
  
  .size-option {
    min-width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    border: 1px solid var(--medium-gray);
    border-radius: 4px;
    padding: 0 12px;
    cursor: pointer;
    transition: all 0.2s ease;
  }
  
  .size-option.selected {
    background-color: var(--primary-pink);
    color: white;
    border-color: var(--primary-pink);
  }
  
  .quantity-selector {
    display: flex;
    align-items: center;
    border: 1px solid var(--medium-gray);
    border-radius: 4px;
    width: fit-content;
  }
  
  .quantity-btn {
    width: 40px;
    height: 40px;
    background: none;
    border: none;
    font-size: 18px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .quantity-input {
    width: 50px;
    height: 40px;
    border: none;
    text-align: center;
    font-size: 16px;
    -moz-appearance: textfield;
  }
  
  .quantity-input::-webkit-outer-spin-button,
  .quantity-input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }
  
  .order-booking-options {
    margin-top: 20px;
    padding: 20px;
    background-color: #f9f9f9;
    border-radius: 8px;
  }
  
  .booking-title {
    font-size: 18px;
    margin-top: 0;
    margin-bottom: 15px;
  }
  
  .delivery-date-picker,
  .delivery-time-slot,
  .gift-option {
    margin-bottom: 15px;
  }
  
  .delivery-date-picker label,
  .delivery-time-slot label {
    display: block;
    margin-bottom: 8px;
    font-weight: 500;
  }
  
  .date-input,
  #DeliveryTime {
    width: 100%;
    padding: 10px;
    border: 1px solid var(--medium-gray);
    border-radius: 4px;
    font-size: 16px;
  }
  
  .delivery-note {
    font-size: 13px;
    color: var(--light-text);
    margin-top: 5px;
  }
  
  .gift-checkbox-label {
    display: flex;
    align-items: center;
    cursor: pointer;
    font-weight: 500;
  }
  
  .gift-checkbox-label input {
    margin-right: 10px;
  }
  
  #GiftMessage {
    width: 100%;
    padding: 10px;
    border: 1px solid var(--medium-gray);
    border-radius: 4px;
    font-size: 16px;
    resize: vertical;
    margin-top: 10px;
  }
  
  .product-actions {
    display: flex;
    gap: 10px;
    margin-top: 10px;
  }
  
  .btn {
    padding: 12px 24px;
    border-radius: 30px;
    font-size: 16px;
    font-weight: 500;
    cursor: pointer;
    border: none;
    transition: all 0.2s ease;
    display: inline-flex;
    align-items: center;
    justify-content: center;
  }
  
  .primary-btn {
    background-color: var(--primary-pink);
    color: white;
    flex: 1;
  }
  
  .primary-btn:hover {
    background-color: var(--primary-pink-dark);
  }
  
  .secondary-btn {
    background-color: white;
    color: var(--primary-pink);
    border: 1px solid var(--primary-pink);
  }
  
  .secondary-btn:hover {
    background-color: var(--primary-pink);
    color: white;
  }
  
  .add-to-cart {
    position: relative;
  }
  
  .add-to-cart.loading .btn-text {
    visibility: hidden;
  }
  
  .add-to-cart.loading .btn-loading {
    display: flex;
  }
  
  .btn-loading {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: none;
    align-items: center;
    justify-content: center;
  }
  
  .spinner {
    width: 24px;
    height: 24px;
    animation: rotate 2s linear infinite;
  }
  
  .spinner .path {
    stroke: white;
    stroke-linecap: round;
    animation: dash 1.5s ease-in-out infinite;
  }
  
  @keyframes rotate {
    100% {
      transform: rotate(360deg);
    }
  }
  
  @keyframes dash {
    0% {
      stroke-dasharray: 1, 150;
      stroke-dashoffset: 0;
    }
    50% {
      stroke-dasharray: 90, 150;
      stroke-dashoffset: -35;
    }
    100% {
      stroke-dasharray: 90, 150;
      stroke-dashoffset: -124;
    }
  }
  
  .wishlist-btn {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background-color: white;
    border: 1px solid var(--medium-gray);
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.2s ease;
  }
  
  .wishlist-btn:hover {
    background-color: #f5f5f5;
  }
  
  .wishlist-btn.active {
    color: var(--primary-pink);
  }
  
  .product-details {
    margin-top: 30px;
  }
  
  .shipping-info {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 15px;
    margin-bottom: 30px;
    padding: 20px;
    background-color: #f9f9f9;
    border-radius: 8px;
  }
  
  .info-item {
    display: flex;
    align-items: center;
    gap: 10px;
  }
  
  .info-icon {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background-color: var(--primary-pink);
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 18px;
  }
  
  .info-text strong {
    display: block;
    font-size: 14px;
    margin-bottom: 2px;
  }
  
  .info-text p {
    margin: 0;
    font-size: 12px;
    color: var(--light-text);
  }
  
  .product-accordion {
    margin-bottom: 30px;
  }
  
  .accordion-item {
    border-bottom: 1px solid var(--medium-gray);
  }
  
  .accordion-header {
    width: 100%;
    padding: 15px 0;
    background: none;
    border: none;
    text-align: left;
    font-size: 16px;
    font-weight: 500;
    cursor: pointer;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  
  .accordion-header i {
    transition: transform 0.3s ease;
  }
  
  .accordion-header[aria-expanded="true"] i {
    transform: rotate(180deg);
  }
  
  .accordion-content {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease;
  }
  
  .product-description {
    padding-bottom: 15px;
    line-height: 1.6;
  }
  
  .product-meta {
    margin-top: 30px;
    padding-top: 20px;
    border-top: 1px solid var(--medium-gray);
  }
  
  .meta-item {
    margin-bottom: 10px;
    display: flex;
    align-items: center;
  }
  
  .meta-label {
    font-weight: 500;
    margin-right: 10px;
    min-width: 60px;
  }
  
  .social-sharing {
    display: flex;
    gap: 10px;
  }
  
  .social-sharing a {
    width: 36px;
    height: 36px;
    border-radius: 50%;
    background-color: #f5f5f5;
    color: var(--dark-text);
    display: flex;
    align-items: center;
    justify-content: center;
    text-decoration: none;
    transition: all 0.2s ease;
  }
  
  .social-sharing a:hover {
    background-color: var(--primary-pink);
    color: white;
  }
  
  @media (max-width: 767px) {
    .product-container {
      grid-template-columns: 1fr;
      gap: 30px;
    }
    
    .shipping-info {
      grid-template-columns: 1fr;
    }
    
    .product-title {
      font-size: 24px;
    }
    
    .product-actions {
      flex-direction: column;
    }
    
    .wishlist-btn {
      align-self: flex-end;
      margin-top: -50px;
    }
  }
</style>

{% schema %}
{
  "name": "Enhanced Product",
  "settings": [
    {
      "type": "header",
      "content": "Product Gallery"
    },
    {
      "type": "select",
      "id": "gallery_layout",
      "label": "Gallery layout",
      "options": [
        {
          "value": "stacked",
          "label": "Stacked"
        },
        {
          "value": "thumbnails",
          "label": "Thumbnails"
        },
        {
          "value": "grid",
          "label": "Grid"
        }
      ],
      "default": "thumbnails"
    },
    {
      "type": "select",
      "id": "media_size",
      "label": "Media size",
      "options": [
        {
          "value": "small",
          "label": "Small"
        },
        {
          "value": "medium",
          "label": "Medium"
        },
        {
          "value": "large",
          "label": "Large"
        }
      ],
      "default": "large"
    },
    {
      "type": "header",
      "content": "Variant Options"
    },
    {
      "type": "select",
      "id": "variant_style",
      "label": "Variant selection style",
      "options": [
        {
          "value": "dropdowns",
          "label": "Dropdowns"
        },
        {
          "value": "buttons",
          "label": "Buttons"
        }
      ],
      "default": "buttons"
    },
    {
      "type": "checkbox",
      "id": "hide_variants",
      "label": "Hide variants for single options",
      "default": false
    },
    {
      "type": "header",
      "content": "Add to Cart"
    },
    {
      "type": "text",
      "id": "add_to_cart_text",
      "label": "Add to cart button text",
      "default": "Add to Cart"
    },
    {
      "type": "checkbox",
      "id": "enable_buy_now",
      "label": "Enable buy now button",
      "default": true
    },
    {
      "type": "text",
      "id": "buy_now_text",
      "label": "Buy now button text",
      "default": "Buy Now"
    },
    {
      "type": "header",
      "content": "Order Booking"
    },
    {
      "type": "checkbox",
      "id": "enable_order_booking",
      "label": "Enable order booking",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_time_slots",
      "label": "Show delivery time slots",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_gift_option",
      "label": "Enable gift option",
      "default": true
    },
    {
      "type": "header",
      "content": "Product Information"
    },
    {
      "type": "checkbox",
      "id": "show_shipping_info",
      "label": "Show shipping information",
      "default": true
    },
    {
      "type": "text",
      "id": "free_shipping_threshold",
      "label": "Free shipping threshold",
      "default": "$50"
    },
    {
      "type": "text",
      "id": "return_days",
      "label": "Return policy days",
      "default": "30"
    }
  ],
  "presets": [
    {
      "name": "Enhanced Product",
      "category": "Product"
    }
  ]
}
{% endschema %}
