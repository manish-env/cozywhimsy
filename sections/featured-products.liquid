<section class="featured-products">
  <div class="container">
    <div class="section-header">
      <h2 class="section-title">{{ section.settings.title | escape }}</h2>
      <p class="section-subtitle">{{ section.settings.subtitle | escape }}</p>
    </div>
    
    <div class="product-grid">
      {% assign collection = collections[section.settings.collection] %}
      {% assign product_limit = section.settings.products_to_show %}
      
      {% if collection != blank and collection.products.size > 0 %}
        {% for product in collection.products limit: product_limit %}
          <div class="product-card">
            {% if product.tags contains 'new' %}
              <div class="product-badge">New</div>
            {% elsif product.tags contains 'bestseller' %}
              <div class="product-badge bestseller">Bestseller</div>
            {% endif %}
            
            <a href="{{ product.url | within: collection }}" class="product-img-link">
              {% if product.featured_image != blank %}
                <div class="product-img" style="background-image: url('{{ product.featured_image | img_url: 'master' }}'); background-size: cover; background-position: center;"></div>
              {% else %}
                <div class="product-img" style="background-color: #f5f5f5;"></div>
              {% endif %}
            </a>
            
            <div class="product-content">
              <h3><a href="{{ product.url | within: collection }}">{{ product.title }}</a></h3>
              <p class="price">
                {% if product.compare_at_price > product.price %}
                  <span class="sale-price">{{ product.price | money }}</span>
                  <span class="compare-price">{{ product.compare_at_price | money }}</span>
                {% else %}
                  {{ product.price | money }}
                {% endif %}
              </p>
              <div class="product-actions">
                {% if product.available %}
                  <button class="add-to-cart" data-product-id="{{ product.id }}">
                    {% if product.variants.size > 1 %}
                      View Options
                    {% else %}
                      Add to Cart
                    {% endif %}
                  </button>
                {% else %}
                  <button class="add-to-cart sold-out" disabled>Sold Out</button>
                {% endif %}
                <button class="wishlist-btn" data-product-id="{{ product.id }}">
                  <i class="far fa-heart"></i>
                </button>
              </div>
            </div>
          </div>
        {% endfor %}
      {% else %}
        {% comment %} Display placeholder products if no collection is selected or collection is empty {% endcomment %}
        {% for i in (1..4) %}
          <div class="product-card">
            <div class="product-img" style="background-color: #f5f5f5;"></div>
            <div class="product-content">
              <h3>Sample Product {{ i }}</h3>
              <p class="price">$29.99</p>
              <div class="product-actions">
                <button class="add-to-cart">Add to Cart</button>
                <button class="wishlist-btn"><i class="far fa-heart"></i></button>
              </div>
            </div>
          </div>
        {% endfor %}
      {% endif %}
    </div>
    
    {% if section.settings.view_all_link != blank %}
      <div class="view-all">
        <a href="{{ section.settings.view_all_link }}" class="btn secondary-btn">{{ section.settings.view_all_text }}</a>
      </div>
    {% endif %}
  </div>
</section>

<script>
  document.querySelectorAll('.add-to-cart').forEach(button => {
    button.addEventListener('click', function() {
      const productId = this.getAttribute('data-product-id');
      if (productId) {
        if (this.textContent.trim() === 'View Options') {
          window.location.href = '/products/' + productId;
        } else {
          // Add to cart functionality using Shopify AJAX API
          const originalText = this.textContent;
          this.textContent = 'Adding...';
          this.disabled = true;
          
          fetch('/cart/add.js', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'Accept': 'application/json'
            },
            body: JSON.stringify({
              id: productId,
              quantity: 1
            })
          })
          .then(response => response.json())
          .then(data => {
            // Update button text temporarily
            this.textContent = 'Added!';
            
            // Update cart count
            fetch('/cart.js')
              .then(res => res.json())
              .then(cart => {
                const cartCountElement = document.querySelector('.cart-count');
                if (cartCountElement) {
                  cartCountElement.textContent = cart.item_count;
                  cartCountElement.classList.add('updated');
                  setTimeout(() => cartCountElement.classList.remove('updated'), 1000);
                }
              });
            
            // Reset button after delay
            setTimeout(() => {
              this.textContent = originalText;
              this.disabled = false;
            }, 2000);
          })
          .catch(error => {
            console.error('Error adding product to cart:', error);
            this.textContent = 'Error';
            setTimeout(() => {
              this.textContent = originalText;
              this.disabled = false;
            }, 2000);
          });
        }
      }
    });
  });
  
  document.querySelectorAll('.wishlist-btn').forEach(button => {
    button.addEventListener('click', function() {
      this.classList.toggle('active');
      const icon = this.querySelector('i');
      if (icon.classList.contains('far')) {
        icon.classList.remove('far');
        icon.classList.add('fas');
      } else {
        icon.classList.remove('fas');
        icon.classList.add('far');
      }
    });
  });
</script>

{% schema %}
{
  "name": "Featured Products",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Featured Products"
    },
    {
      "type": "text",
      "id": "subtitle",
      "label": "Subtitle",
      "default": "Our most loved items this season"
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 2,
      "max": 12,
      "step": 1,
      "default": 4,
      "label": "Number of products to show"
    },
    {
      "type": "url",
      "id": "view_all_link",
      "label": "View All Link"
    },
    {
      "type": "text",
      "id": "view_all_text",
      "label": "View All Text",
      "default": "View All Products"
    }
  ],
  "presets": [
    {
      "name": "Featured Products",
      "category": "Products"
    }
  ]
}
{% endschema %}
