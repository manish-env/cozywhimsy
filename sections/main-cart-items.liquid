<div class="cart-items-section">
  <div class="container">
    <div class="cart-header">
      <h1 class="cart-title">Your Cart</h1>
      <a href="/collections/all" class="continue-shopping">Continue Shopping</a>
    </div>
    
    <form action="/cart" method="post" id="cart-form" class="cart-form">
      {% if cart.item_count > 0 %}
        <div class="cart-table">
          <div class="cart-table-header">
            <div class="cart-header-product">Product</div>
            <div class="cart-header-price">Price</div>
            <div class="cart-header-quantity">Quantity</div>
            <div class="cart-header-total">Total</div>
          </div>
          
          <div class="cart-items">
            {% for item in cart.items %}
              <div class="cart-item" id="CartItem-{{ item.key }}">
                <div class="cart-item-product">
                  <div class="cart-item-image">
                    <a href="{{ item.url }}">
                      <img src="{{ item.image | img_url: '120x' }}" alt="{{ item.title | escape }}">
                    </a>
                  </div>
                  <div class="cart-item-details">
                    <a href="{{ item.url }}" class="cart-item-name">{{ item.product.title }}</a>
                    
                    {% if section.settings.show_vendor %}
                      <p class="cart-item-vendor">{{ item.vendor }}</p>
                    {% endif %}
                    
                    {% unless item.product.has_only_default_variant %}
                      <p class="cart-item-variant">{{ item.variant.title }}</p>
                    {% endunless %}
                    
                    <div class="cart-item-options">
                      {% for property in item.properties %}
                        {% unless property.first == '_' %}
                          <div class="cart-item-property">
                            <span class="property-name">{{ property.first }}:</span>
                            <span class="property-value">
                              {% if property.last contains '/uploads/' %}
                                <a href="{{ property.last }}">{{ property.last | split: '/' | last }}</a>
                              {% else %}
                                {{ property.last }}
                              {% endif %}
                            </span>
                          </div>
                        {% endunless %}
                      {% endfor %}
                    </div>
                    
                    <div class="cart-item-mobile-price">
                      <span class="price">{{ item.original_price | money }}</span>
                    </div>
                    
                    <div class="cart-item-mobile-quantity">
                      <div class="quantity-selector">
                        <button type="button" class="quantity-button minus" data-item-key="{{ item.key }}">-</button>
                        <input type="number" name="updates[{{ item.key }}]" value="{{ item.quantity }}" min="0" aria-label="Quantity" class="quantity-input" data-item-key="{{ item.key }}">
                        <button type="button" class="quantity-button plus" data-item-key="{{ item.key }}">+</button>
                      </div>
                    </div>
                    
                    <div class="cart-item-mobile-total">
                      <span class="price">{{ item.final_line_price | money }}</span>
                    </div>
                    
                    <button type="button" class="remove-item" data-item-key="{{ item.key }}" aria-label="Remove {{ item.title }}">
                      <i class="fas fa-times"></i>
                    </button>
                  </div>
                </div>
                
                <div class="cart-item-price">
                  {% if item.original_price != item.final_price %}
                    <span class="price-item price-item--sale">{{ item.final_price | money }}</span>
                    <span class="price-item price-item--regular">{{ item.original_price | money }}</span>
                  {% else %}
                    <span class="price-item">{{ item.original_price | money }}</span>
                  {% endif %}
                  
                  {% if item.line_level_discount_allocations.size > 0 %}
                    <div class="cart-item-discounts">
                      {% for discount in item.line_level_discount_allocations %}
                        <span class="cart-item-discount">{{ discount.discount_application.title }}: {{ discount.amount | money }}</span>
                      {% endfor %}
                    </div>
                  {% endif %}
                </div>
                
                <div class="cart-item-quantity">
                  <div class="quantity-selector">
                    <button type="button" class="quantity-button minus" data-item-key="{{ item.key }}">-</button>
                    <input type="number" name="updates[{{ item.key }}]" value="{{ item.quantity }}" min="0" aria-label="Quantity" class="quantity-input" data-item-key="{{ item.key }}">
                    <button type="button" class="quantity-button plus" data-item-key="{{ item.key }}">+</button>
                  </div>
                </div>
                
                <div class="cart-item-total">
                  <span class="price">{{ item.final_line_price | money }}</span>
                </div>
                
                <button type="button" class="remove-item desktop" data-item-key="{{ item.key }}" aria-label="Remove {{ item.title }}">
                  <i class="fas fa-times"></i>
                </button>
              </div>
            {% endfor %}
          </div>
        </div>
        
        <div class="cart-note">
          <label for="CartNote">Order Special Instructions</label>
          <textarea name="note" id="CartNote" placeholder="Add a note to your order...">{{ cart.note }}</textarea>
        </div>
        
        <div class="cart-update">
          <button type="submit" name="update" class="update-cart">Update Cart</button>
        </div>
      {% else %}
        <div class="empty-cart">
          <div class="empty-cart-icon">
            <i class="fas fa-shopping-cart"></i>
          </div>
          <h2>Your cart is empty</h2>
          <p>You haven't added any items to your cart yet.</p>
          <a href="/collections/all" class="btn primary-btn">Start Shopping</a>
        </div>
      {% endif %}
    </form>
  </div>
</div>

{% schema %}
{
  "name": "Cart Items",
  "settings": [
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "Show product vendor"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top padding",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding",
      "default": 36
    }
  ]
}
{% endschema %}

<style>
  .cart-items-section {
    padding: var(--padding-top, 36px) 0 var(--padding-bottom, 36px);
  }
  
  .cart-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 30px;
  }
  
  .cart-title {
    font-size: 2rem;
    margin: 0;
  }
  
  .continue-shopping {
    color: var(--primary-pink);
    font-weight: 500;
    display: inline-flex;
    align-items: center;
  }
  
  .continue-shopping:hover {
    text-decoration: underline;
  }
  
  .cart-table {
    margin-bottom: 30px;
  }
  
  .cart-table-header {
    display: grid;
    grid-template-columns: 3fr 1fr 1fr 1fr auto;
    padding: 15px 0;
    border-bottom: 1px solid var(--medium-gray);
    font-weight: 500;
    display: none;
  }
  
  @media (min-width: 768px) {
    .cart-table-header {
      display: grid;
    }
  }
  
  .cart-item {
    display: grid;
    grid-template-columns: 3fr 1fr 1fr 1fr auto;
    padding: 20px 0;
    border-bottom: 1px solid var(--medium-gray);
    align-items: center;
  }
  
  @media (max-width: 767px) {
    .cart-item {
      display: block;
      position: relative;
      padding-right: 30px;
    }
  }
  
  .cart-item-product {
    display: flex;
    align-items: center;
  }
  
  .cart-item-image {
    width: 80px;
    margin-right: 15px;
  }
  
  .cart-item-image img {
    width: 100%;
    height: auto;
    border-radius: var(--border-radius-sm);
  }
  
  .cart-item-name {
    font-weight: 500;
    margin-bottom: 5px;
    display: block;
  }
  
  .cart-item-vendor {
    font-size: 12px;
    color: var(--light-text);
    margin-bottom: 5px;
  }
  
  .cart-item-variant {
    font-size: 12px;
    color: var(--light-text);
    margin-bottom: 5px;
  }
  
  .cart-item-property {
    font-size: 12px;
    margin-bottom: 3px;
  }
  
  .property-name {
    font-weight: 500;
  }
  
  .cart-item-discounts {
    margin-top: 5px;
  }
  
  .cart-item-discount {
    display: block;
    font-size: 12px;
    color: var(--primary-pink);
  }
  
  .cart-item-mobile-price,
  .cart-item-mobile-quantity,
  .cart-item-mobile-total {
    display: none;
  }
  
  @media (max-width: 767px) {
    .cart-item-mobile-price,
    .cart-item-mobile-quantity,
    .cart-item-mobile-total {
      display: flex;
      margin-top: 10px;
      padding-left: 95px;
    }
    
    .cart-item-price,
    .cart-item-quantity,
    .cart-item-total,
    .remove-item.desktop {
      display: none;
    }
    
    .remove-item {
      position: absolute;
      top: 20px;
      right: 0;
    }
  }
  
  .quantity-selector {
    display: flex;
    align-items: center;
    max-width: 120px;
  }
  
  .quantity-button {
    width: 30px;
    height: 30px;
    background: var(--light-gray);
    border: none;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    font-size: 16px;
  }
  
  .quantity-input {
    width: 40px;
    height: 30px;
    border: 1px solid var(--medium-gray);
    text-align: center;
    -moz-appearance: textfield;
  }
  
  .quantity-input::-webkit-outer-spin-button,
  .quantity-input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }
  
  .price-item--sale {
    color: var(--primary-pink);
  }
  
  .price-item--regular {
    text-decoration: line-through;
    font-size: 0.9em;
    color: var(--light-text);
  }
  
  .remove-item {
    background: none;
    border: none;
    color: var(--light-text);
    cursor: pointer;
    padding: 5px;
    transition: all 0.3s ease;
  }
  
  .remove-item:hover {
    color: var(--primary-pink);
  }
  
  .cart-note {
    margin-bottom: 20px;
  }
  
  .cart-note label {
    display: block;
    margin-bottom: 10px;
    font-weight: 500;
  }
  
  .cart-note textarea {
    width: 100%;
    padding: 15px;
    border: 1px solid var(--medium-gray);
    border-radius: var(--border-radius-sm);
    min-height: 100px;
    resize: vertical;
  }
  
  .cart-update {
    text-align: right;
  }
  
  .update-cart {
    background: var(--light-purple);
    color: var(--primary-purple);
    border: none;
    padding: 10px 20px;
    border-radius: 30px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  .update-cart:hover {
    background: var(--primary-purple);
    color: white;
  }
  
  .empty-cart {
    text-align: center;
    padding: 60px 0;
  }
  
  .empty-cart-icon {
    font-size: 60px;
    color: var(--light-text);
    margin-bottom: 20px;
  }
  
  .empty-cart h2 {
    margin-bottom: 15px;
  }
  
  .empty-cart p {
    margin-bottom: 30px;
    color: var(--light-text);
  }
  
  @media (max-width: 576px) {
    .cart-header {
      flex-direction: column;
      align-items: flex-start;
      gap: 10px;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const cartForm = document.getElementById('cart-form');
    if (!cartForm) return;
    
    // Quantity selectors
    const quantityButtons = document.querySelectorAll('.quantity-button');
    quantityButtons.forEach(button => {
      button.addEventListener('click', function() {
        const itemKey = this.dataset.itemKey;
        const input = document.querySelector(`.quantity-input[data-item-key="${itemKey}"]`);
        
        if (this.classList.contains('minus')) {
          if (parseInt(input.value) > 0) {
            input.value = parseInt(input.value) - 1;
          }
        } else if (this.classList.contains('plus')) {
          input.value = parseInt(input.value) + 1;
        }
        
        // Auto-update cart when quantity changes
        const updateButton = document.querySelector('.update-cart');
        if (updateButton) {
          updateButton.click();
        }
      });
    });
    
    // Remove item buttons
    const removeButtons = document.querySelectorAll('.remove-item');
    removeButtons.forEach(button => {
      button.addEventListener('click', function() {
        const itemKey = this.dataset.itemKey;
        const input = document.querySelector(`.quantity-input[data-item-key="${itemKey}"]`);
        
        input.value = 0;
        
        // Auto-update cart when item is removed
        const updateButton = document.querySelector('.update-cart');
        if (updateButton) {
          updateButton.click();
        }
      });
    });
  });
</script>
