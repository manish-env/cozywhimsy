<div class="product-recommendations">
  <div class="container">
    {% if section.settings.heading != blank %}
      <div class="section-header">
        <h2 class="section-title">{{ section.settings.heading | escape }}</h2>
      </div>
    {% endif %}
    
    <div class="product-grid" 
         data-columns-desktop="{{ section.settings.columns_desktop }}" 
         data-columns-mobile="{{ section.settings.columns_mobile }}">
      {%- if recommendations.performed and recommendations.products_count > 0 -%}
        {% for product in recommendations.products %}
          {% render 'product-card', 
            product: product, 
            show_rating: section.settings.show_rating,
            show_price: true,
            show_vendor: section.settings.show_vendor,
            show_badge: true,
            image_ratio: section.settings.image_ratio
          %}
        {% endfor %}
      {%- else -%}
        {% for i in (1..4) %}
          <div class="product-card">
            <div class="product-card__inner">
              <div class="product-card__image-container" style="padding-bottom: 100%;">
                {{ 'product-1' | placeholder_svg_tag: 'product-card__image placeholder' }}
              </div>
              <div class="product-card__content">
                <h3 class="product-card__title">Sample Product</h3>
                <div class="product-card__price">
                  <span class="product-card__price--regular">$29.99</span>
                </div>
              </div>
            </div>
          </div>
        {% endfor %}
      {%- endif -%}
    </div>
  </div>
</div>

<style>
  .product-recommendations {
    padding: var(--padding-top, 36px) 0 var(--padding-bottom, 36px);
  }
  
  .section-header {
    text-align: center;
    margin-bottom: 30px;
  }
  
  .section-title {
    font-size: 28px;
    margin: 0;
  }
  
  .product-grid {
    display: grid;
    grid-template-columns: repeat(var(--columns-desktop, 4), 1fr);
    gap: 30px;
  }
  
  .product-card {
    position: relative;
    transition: transform 0.3s ease;
  }
  
  .product-card:hover {
    transform: translateY(-5px);
  }
  
  .product-badge {
    position: absolute;
    top: 10px;
    left: 10px;
    background-color: var(--primary-pink);
    color: white;
    padding: 5px 10px;
    font-size: 12px;
    border-radius: 20px;
    z-index: 2;
  }
  
  .product-badge.bestseller {
    background-color: #ffa500;
  }
  
  .product-badge.sale {
    background-color: #e53935;
  }
  
  .product-image-container {
    position: relative;
    border-radius: 8px;
    overflow: hidden;
    padding-bottom: 100%;
  }
  
  .product-image-container[style*="--image-ratio: square"] {
    padding-bottom: 100%;
  }
  
  .product-image-container[style*="--image-ratio: portrait"] {
    padding-bottom: 125%;
  }
  
  .product-image-container[style*="--image-ratio: landscape"] {
    padding-bottom: 75%;
  }
  
  .product-image, .product-image-hover {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: opacity 0.3s ease;
  }
  
  .product-image-hover {
    opacity: 0;
  }
  
  .product-card:hover .product-image {
    opacity: 0;
  }
  
  .product-card:hover .product-image-hover {
    opacity: 1;
  }
  
  .placeholder-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #f5f5f5;
  }
  
  .product-info {
    padding: 15px 0;
  }
  
  .product-vendor {
    font-size: 12px;
    color: var(--light-text);
    text-transform: uppercase;
    margin-bottom: 5px;
  }
  
  .product-title {
    font-size: 16px;
    margin: 0 0 8px;
    font-weight: 500;
    line-height: 1.4;
  }
  
  .product-title a {
    color: var(--dark-text);
    text-decoration: none;
  }
  
  .product-title a:hover {
    color: var(--primary-pink);
  }
  
  .product-price {
    display: flex;
    align-items: center;
    gap: 8px;
  }
  
  .sale-price {
    color: var(--primary-pink);
    font-weight: 600;
  }
  
  .compare-price {
    color: var(--light-text);
    text-decoration: line-through;
    font-size: 14px;
  }
  
  .product-rating {
    display: flex;
    align-items: center;
    gap: 5px;
    margin-top: 5px;
  }
  
  .stars {
    position: relative;
    display: inline-block;
    color: #ddd;
    font-size: 14px;
  }
  
  .stars::before {
    content: "★★★★★";
    position: absolute;
    top: 0;
    left: 0;
    color: #ffc107;
    width: calc(var(--rating) * 20%);
    overflow: hidden;
  }
  
  .rating-count {
    font-size: 12px;
    color: var(--light-text);
  }
  
  @media (max-width: 767px) {
    .product-grid {
      grid-template-columns: repeat(2, 1fr);
      gap: 10px;
    }
    
    .section-title {
      font-size: 22px;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const productId = document.querySelector('.enhanced-product-template')?.getAttribute('data-product-id');
    const recommendationsContainer = document.querySelector('.product-grid');
    
    if (productId && recommendationsContainer) {
      // Show loading state
      recommendationsContainer.classList.add('loading');
      
      // Fetch product recommendations
      fetch(`/recommendations/products.json?product_id=${productId}&limit={{ section.settings.products_to_show }}&section_id=product-recommendations`)
        .then(response => response.json())
        .then(data => {
          if (data.products && data.products.length > 0) {
            // Clear placeholder content
            recommendationsContainer.innerHTML = '';
            
            // Process recommendations and update DOM
            data.products.forEach(product => {
              const productCard = document.createElement('div');
              productCard.className = 'product-card';
              
              // Add badges if applicable
              if (product.tags && product.tags.includes('new')) {
                productCard.innerHTML += '<div class="product-badge">New</div>';
              } else if (product.tags && product.tags.includes('bestseller')) {
                productCard.innerHTML += '<div class="product-badge bestseller">Bestseller</div>';
              } else if (product.compare_at_price_max > product.price) {
                productCard.innerHTML += '<div class="product-badge sale">Sale</div>';
              }
              
              // Product image with hover effect if enabled
              let productImageHtml = `
                <a href="${product.url}" class="product-img-link">
                  <div class="product-image-container" style="--image-ratio: {{ section.settings.image_ratio }};">
                    <img src="${product.featured_image}" alt="${product.title}" class="product-image">
              `;
              
              if ({{ section.settings.show_secondary_image | json }} && product.images && product.images.length > 1) {
                productImageHtml += `<img src="${product.images[1]}" alt="${product.title}" class="product-image-hover">`;
              }
              
              productImageHtml += `</div></a>`;
              productCard.innerHTML += productImageHtml;
              
              // Product info
              let productInfoHtml = '<div class="product-info">';
              
              if ({{ section.settings.show_vendor | json }}) {
                productInfoHtml += `<div class="product-vendor">${product.vendor}</div>`;
              }
              
              productInfoHtml += `
                <h3 class="product-title">
                  <a href="${product.url}">${product.title}</a>
                </h3>
                
                <div class="product-price">
              `;
              
              if (product.compare_at_price_max > product.price) {
                productInfoHtml += `
                  <span class="sale-price">${product.price_min}</span>
                  <span class="compare-price">${product.compare_at_price_max}</span>
                `;
              } else {
                productInfoHtml += `<span class="regular-price">${product.price_min}</span>`;
              }
              
              productInfoHtml += '</div>';
              
              if ({{ section.settings.show_rating | json }} && product.metafields && product.metafields.reviews && product.metafields.reviews.rating) {
                productInfoHtml += `
                  <div class="product-rating">
                    <div class="stars" style="--rating: ${product.metafields.reviews.rating};">
                      <span>★★★★★</span>
                    </div>
                    <span class="rating-count">(${product.metafields.reviews.rating_count})</span>
                  </div>
                `;
              }
              
              productInfoHtml += '</div>';
              productCard.innerHTML += productInfoHtml;
              
              recommendationsContainer.appendChild(productCard);
            });
            
            console.log('Product recommendations loaded:', data.products.length);
          }
          
          // Remove loading state
          recommendationsContainer.classList.remove('loading');
        })
        .catch(error => {
          console.error('Error fetching product recommendations:', error);
          recommendationsContainer.classList.remove('loading');
        });
    }
  });
</script>

{% schema %}
{
  "name": "Product Recommendations",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "default": "You may also like",
      "label": "Heading"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 2,
      "max": 8,
      "step": 1,
      "default": 4,
      "label": "Products to show"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 2,
      "max": 5,
      "step": 1,
      "default": 4,
      "label": "Number of columns on desktop"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "square",
          "label": "Square"
        },
        {
          "value": "portrait",
          "label": "Portrait"
        },
        {
          "value": "landscape",
          "label": "Landscape"
        }
      ],
      "default": "square",
      "label": "Image ratio"
    },
    {
      "type": "checkbox",
      "id": "show_secondary_image",
      "default": true,
      "label": "Show second image on hover"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "Show product vendor"
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "default": false,
      "label": "Show product rating"
    },
    {
      "type": "range",
      "id": "columns_mobile",
      "min": 1,
      "max": 3,
      "step": 1,
      "default": 2,
      "label": "Number of columns on mobile"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "default": 36,
      "label": "Top padding"
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "default": 28,
      "label": "Bottom padding"
    }
  ],
  "presets": [
    {
      "name": "Product Recommendations",
      "category": "Product"
    }
  ]
}
{% endschema %}
