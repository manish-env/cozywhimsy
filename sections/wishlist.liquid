{% comment %}
  Wishlist section for CozyWhimsy theme
  This section can be included on any page to display the wishlist
{% endcomment %}

<div class="wishlist-page">
  <div class="container">
    <div class="wishlist-header">
      <h1 class="wishlist-title">My Wishlist</h1>
      
      <div class="wishlist-actions">
        <button type="button" class="button button-primary" data-wishlist-add-all>
          <span class="button-icon"><i class="fas fa-shopping-bag"></i></span>
          <span class="button-text">{{ 'wishlist.add_all_to_cart' | t | default: 'Add All to Cart' }}</span>
        </button>
        
        <button type="button" class="button button-secondary" data-wishlist-clear>
          <span class="button-icon"><i class="fas fa-trash-alt"></i></span>
          <span class="button-text">{{ 'wishlist.clear_wishlist' | t | default: 'Clear Wishlist' }}</span>
        </button>
      </div>
    </div>
    
    <div class="wishlist-content">
      <div class="wishlist-grid" data-wishlist-grid></div>
      
      <div class="wishlist-empty" data-wishlist-empty style="display: none;">
        <div class="wishlist-empty-icon">
          <i class="far fa-heart" style="font-size: 64px; color: #ff6b9a; opacity: 0.5;"></i>
        </div>
        <h2 class="wishlist-empty-title">{{ 'wishlist.empty_title' | t | default: 'Your wishlist is empty' }}</h2>
        <p class="wishlist-empty-text">{{ 'wishlist.empty_text' | t | default: 'Add items to your wishlist by clicking the heart icon on products you love' }}</p>
        <a href="/collections/all" class="button button-primary wishlist-empty-button">
          <span class="button-icon"><i class="fas fa-shopping-bag"></i></span>
          <span class="button-text">{{ 'wishlist.continue_shopping' | t | default: 'Continue Shopping' }}</span>
        </a>
      </div>
    </div>
  </div>
</div>

<style>
  .wishlist-page {
    padding: 40px 0 60px;
    background-color: #fff;
  }
  
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
  }
  
  .wishlist-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 30px;
    flex-wrap: wrap;
    border-bottom: 1px solid #f0f0f0;
    padding-bottom: 20px;
  }
  
  .wishlist-title {
    margin: 0;
    font-size: 28px;
    font-weight: 600;
    color: #333;
    font-family: var(--font-heading-family, 'Poppins', sans-serif);
  }
  
  .wishlist-actions {
    display: flex;
    gap: 12px;
    margin-top: 10px;
  }
  
  .button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 10px 20px;
    border-radius: 8px;
    font-weight: 500;
    font-size: 14px;
    transition: all 0.3s ease;
    border: none;
    cursor: pointer;
    font-family: var(--font-body-family, 'Quicksand', sans-serif);
  }
  
  .button-icon {
    margin-right: 8px;
    font-size: 16px;
  }
  
  .button-primary {
    background-color: var(--primary-pink, #ff6b9a);
    color: white;
    box-shadow: 0 4px 10px rgba(255, 107, 154, 0.2);
  }
  
  .button-primary:hover {
    background-color: var(--primary-pink-dark, #e55c8a);
    transform: translateY(-2px);
    box-shadow: 0 6px 12px rgba(255, 107, 154, 0.25);
  }
  
  .button-secondary {
    background-color: #f5f5f5;
    color: #555;
  }
  
  .button-secondary:hover {
    background-color: #eaeaea;
    color: #333;
    transform: translateY(-2px);
  }
  
  .wishlist-grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 20px;
  }
  
  .wishlist-item {
    border-radius: 12px;
    overflow: hidden;
    transition: all 0.3s ease;
    background-color: white;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
  }
  
  .wishlist-item:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
  }
  
  .wishlist-item.removing {
    opacity: 0;
    transform: scale(0.9);
  }
  
  .wishlist-item-image {
    position: relative;
    padding-bottom: 100%;
    overflow: hidden;
    background-color: #f9f9f9;
  }
  
  .wishlist-item-image img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s ease;
  }
  
  .wishlist-item:hover .wishlist-item-image img {
    transform: scale(1.08);
  }
  
  .wishlist-item-remove {
    position: absolute;
    top: 10px;
    right: 10px;
    background: rgba(255, 255, 255, 0.9);
    border: none;
    border-radius: 50%;
    width: 32px;
    height: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 2;
    transition: all 0.2s ease;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    opacity: 0;
    transform: translateY(-5px);
  }
  
  .wishlist-item:hover .wishlist-item-remove {
    opacity: 1;
    transform: translateY(0);
  }
  
  .wishlist-item-remove:hover {
    background: white;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
    transform: scale(1.1);
  }
  
  .wishlist-item-info {
    padding: 16px;
  }
  
  .wishlist-item-title {
    font-size: 16px;
    font-weight: 500;
    margin: 0 0 5px;
    line-height: 1.3;
    color: #333;
    font-family: var(--font-heading-family, 'Poppins', sans-serif);
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    height: 42px;
  }
  
  .wishlist-item-vendor {
    font-size: 14px;
    color: #888;
    margin-bottom: 10px;
    font-weight: 500;
  }
  
  .wishlist-item-price {
    display: flex;
    align-items: center;
    margin-bottom: 15px;
  }
  
  .wishlist-item-current-price {
    font-weight: 600;
    font-size: 18px;
    color: #333;
  }
  
  .wishlist-item-compare-price {
    text-decoration: line-through;
    color: #999;
    margin-left: 8px;
    font-size: 14px;
  }
  
  .wishlist-item-add {
    width: 100%;
    padding: 12px;
    background-color: var(--primary-pink, #ff6b9a);
    color: white;
    border: none;
    border-radius: 8px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    font-family: var(--font-body-family, 'Quicksand', sans-serif);
    font-size: 14px;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 4px 10px rgba(255, 107, 154, 0.2);
  }
  
  .wishlist-item-add:before {
    content: "\f07a";
    font-family: "Font Awesome 6 Free";
    font-weight: 900;
    margin-right: 8px;
  }
  
  .wishlist-item-add:hover {
    background-color: var(--primary-pink-dark, #e55c8a);
    transform: translateY(-2px);
    box-shadow: 0 6px 12px rgba(255, 107, 154, 0.25);
  }
  
  .wishlist-item-add:disabled {
    background-color: #ccc;
    cursor: not-allowed;
    box-shadow: none;
  }
  
  .wishlist-item-add:disabled:before {
    content: "\f05e";
  }
  
  .wishlist-item-add.loading::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 20px;
    height: 20px;
    margin: -10px 0 0 -10px;
    border: 2px solid rgba(255, 255, 255, 0.3);
    border-top-color: white;
    border-radius: 50%;
    animation: spin 0.8s infinite linear;
  }
  
  .wishlist-item-add.loading .btn-text {
    opacity: 0;
  }
  
  .wishlist-empty {
    text-align: center;
    padding: 60px 20px;
    background-color: #fff;
    border-radius: 12px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.03);
  }
  
  .wishlist-empty-icon {
    margin-bottom: 20px;
    animation: pulse 2s infinite;
  }
  
  @keyframes pulse {
    0% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.05);
    }
    100% {
      transform: scale(1);
    }
  }
  
  .wishlist-empty-title {
    font-size: 24px;
    margin-bottom: 10px;
    color: #333;
    font-family: var(--font-heading-family, 'Poppins', sans-serif);
  }
  
  .wishlist-empty-text {
    color: #777;
    margin-bottom: 25px;
    max-width: 500px;
    margin-left: auto;
    margin-right: auto;
    font-size: 16px;
    line-height: 1.5;
  }
  
  .wishlist-empty-button {
    display: inline-flex;
    align-items: center;
    padding: 12px 25px;
    font-size: 16px;
  }
  
  .wishlist-notification {
    position: fixed;
    bottom: 20px;
    right: 20px;
    background-color: #333;
    color: white;
    padding: 12px 20px;
    border-radius: 8px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    transform: translateY(100px);
    opacity: 0;
    transition: all 0.3s ease;
    z-index: 1000;
    font-family: var(--font-body-family, 'Quicksand', sans-serif);
  }
  
  .wishlist-notification.active {
    transform: translateY(0);
    opacity: 1;
  }
  
  .wishlist-loading {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 40px;
    grid-column: 1 / -1;
  }
  
  .spinner {
    width: 40px;
    height: 40px;
    border: 3px solid rgba(255, 107, 154, 0.2);
    border-top-color: var(--primary-pink, #ff6b9a);
    border-radius: 50%;
    animation: spin 0.8s infinite linear;
    margin-bottom: 15px;
  }
  
  .wishlist-loading p {
    color: #777;
    font-size: 16px;
  }
  
  @keyframes spin {
    to { transform: rotate(360deg); }
  }
  
  @media (max-width: 991px) {
    .wishlist-grid {
      grid-template-columns: repeat(3, 1fr);
    }
  }
  
  @media (max-width: 767px) {
    .wishlist-page {
      padding: 30px 0 40px;
    }
    
    .wishlist-header {
      flex-direction: column;
      align-items: flex-start;
    }
    
    .wishlist-actions {
      margin-top: 15px;
      width: 100%;
    }
    
    .wishlist-grid {
      grid-template-columns: repeat(2, 1fr);
      gap: 15px;
    }
    
    .wishlist-item-info {
      padding: 12px;
    }
    
    .wishlist-item-title {
      font-size: 14px;
      height: 36px;
    }
    
    .wishlist-item-vendor {
      font-size: 12px;
    }
    
    .wishlist-item-current-price {
      font-size: 16px;
    }
    
    .wishlist-item-add {
      padding: 10px;
      font-size: 13px;
    }
    
    .wishlist-item-remove {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  @media (max-width: 480px) {
    .wishlist-actions {
      flex-direction: column;
    }
    
    .wishlist-actions button {
      width: 100%;
    }
    
    .wishlist-empty-title {
      font-size: 20px;
    }
    
    .wishlist-empty-text {
      font-size: 14px;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Wait for wishlist to initialize
    if (typeof window.wishlist === 'undefined') {
      const wishlistScript = document.createElement('script');
      wishlistScript.src = "{{ 'wishlist.js' | asset_url }}";
      document.head.appendChild(wishlistScript);
      
      wishlistScript.onload = initWishlistPage;
    } else {
      initWishlistPage();
    }
    
    function initWishlistPage() {
      const wishlistGrid = document.querySelector('[data-wishlist-grid]');
      const emptyMessage = document.querySelector('[data-wishlist-empty]');
      
      // Get wishlist items
      const wishlistItems = window.wishlist.wishlistItems;
      
      if (wishlistItems.length === 0) {
        // Show empty message if wishlist is empty
        wishlistGrid.style.display = 'none';
        emptyMessage.style.display = 'block';
      } else {
        // Show wishlist grid and hide empty message
        wishlistGrid.style.display = 'grid';
        emptyMessage.style.display = 'none';
        
        // Fetch product data for each wishlist item
        fetchWishlistProducts(wishlistItems);
      }
    }
    
    function fetchWishlistProducts(productIds) {
      if (productIds.length === 0) return;
      
      const wishlistGrid = document.querySelector('[data-wishlist-grid]');
      wishlistGrid.innerHTML = '';
      
      // Create a loading indicator
      const loadingElement = document.createElement('div');
      loadingElement.className = 'wishlist-loading';
      loadingElement.innerHTML = '<div class="spinner"></div><p>Loading your wishlist...</p>';
      wishlistGrid.appendChild(loadingElement);
      
      // Fetch each product
      const fetchPromises = productIds.map(productId => {
        return fetch(`/products.json?limit=1&handle=${productId}`)
          .then(response => response.json())
          .then(data => {
            if (data.products && data.products.length > 0) {
              return data.products[0];
            }
            return null;
          })
          .catch(error => {
            console.error('Error fetching product:', error);
            return null;
          });
      });
      
      // When all products are fetched
      Promise.all(fetchPromises)
        .then(products => {
          // Remove loading indicator
          wishlistGrid.innerHTML = '';
          
          // Filter out null products
          const validProducts = products.filter(product => product !== null);
          
          if (validProducts.length === 0) {
            // If no valid products found, show empty message
            const emptyMessage = document.querySelector('[data-wishlist-empty]');
            wishlistGrid.style.display = 'none';
            emptyMessage.style.display = 'block';
            return;
          }
          
          // Render each product
          validProducts.forEach(product => {
            renderWishlistItem(product);
          });
        });
    }
    
    function renderWishlistItem(product) {
      const wishlistGrid = document.querySelector('[data-wishlist-grid]');
      
      // Get the first available variant
      const variant = product.variants.find(v => v.available) || product.variants[0];
      
      // Create wishlist item element
      const itemElement = document.createElement('div');
      itemElement.className = 'wishlist-item';
      itemElement.dataset.productId = product.id;
      
      // Create HTML for the wishlist item
      itemElement.innerHTML = `
        <div class="wishlist-item-image">
          <img src="${product.featured_image ? product.featured_image.src : ''}" alt="${product.title}">
          <button type="button" class="wishlist-item-remove" data-wishlist-remove data-product-id="${product.id}" aria-label="Remove from wishlist">
            <i class="fas fa-times"></i>
          </button>
        </div>
        <div class="wishlist-item-info">
          <h3 class="wishlist-item-title">${product.title}</h3>
          <div class="wishlist-item-vendor">${product.vendor}</div>
          <div class="wishlist-item-price">
            <span class="wishlist-item-current-price">${formatMoney(variant.price)}</span>
            ${variant.compare_at_price > variant.price ? `<span class="wishlist-item-compare-price">${formatMoney(variant.compare_at_price)}</span>` : ''}
          </div>
          <button type="button" 
                  class="wishlist-item-add" 
                  data-variant-id="${variant.id}" 
                  ${!variant.available ? 'disabled' : ''}>
            <span class="btn-text">${variant.available ? 'Add to Cart' : 'Sold Out'}</span>
          </button>
        </div>
      `;
      
      // Add to wishlist grid
      wishlistGrid.appendChild(itemElement);
      
      // Add event listener for add to cart button
      const addButton = itemElement.querySelector('.wishlist-item-add');
      if (addButton && variant.available) {
        addButton.addEventListener('click', function() {
          const variantId = this.dataset.variantId;
          addToCart(variantId, 1);
        });
      }
    }
    
    function addToCart(variantId, quantity) {
      const button = document.querySelector(`.wishlist-item-add[data-variant-id="${variantId}"]`);
      if (button) {
        button.classList.add('loading');
        button.disabled = true;
      }
      
      fetch('/cart/add.js', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        },
        body: JSON.stringify({
          id: variantId,
          quantity: quantity
        })
      })
      .then(response => response.json())
      .then(data => {
        if (button) {
          button.classList.remove('loading');
          button.disabled = false;
        }
        
        // Show success message
        showNotification('Product added to cart');
        
        // Update cart count in header if it exists
        updateCartCount();
      })
      .catch(error => {
        console.error('Error adding to cart:', error);
        
        if (button) {
          button.classList.remove('loading');
          button.disabled = false;
        }
        
        // Show error message
        showNotification('Error adding to cart. Please try again.');
      });
    }
    
    function updateCartCount() {
      fetch('/cart.js')
        .then(response => response.json())
        .then(cart => {
          const cartCountElements = document.querySelectorAll('.cart-count');
          cartCountElements.forEach(element => {
            element.textContent = cart.item_count;
          });
        })
        .catch(error => {
          console.error('Error updating cart count:', error);
        });
    }
    
    function showNotification(message) {
      // Create notification element if it doesn't exist
      let notification = document.querySelector('.wishlist-notification');
      
      if (!notification) {
        notification = document.createElement('div');
        notification.className = 'wishlist-notification';
        document.body.appendChild(notification);
      }
      
      // Set message and show notification
      notification.textContent = message;
      notification.classList.add('active');
      
      // Hide notification after a delay
      setTimeout(() => {
        notification.classList.remove('active');
      }, 3000);
    }
    
    function formatMoney(cents) {
      const value = (cents / 100).toFixed(2);
      return `$${value}`;
    }
  });
</script>

{% schema %}
{
  "name": "Wishlist",
  "settings": [],
  "presets": [
    {
      "name": "Wishlist",
      "category": "Custom Content"
    }
  ]
}
{% endschema %}
