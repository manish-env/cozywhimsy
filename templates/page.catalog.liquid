{% layout 'theme' %}

<div class="catalog-page">
  <!-- Categories section - Now placed above search bar -->
  <div class="catalog-categories-container">
    <div class="container">
      <div class="catalog-categories-wrapper">
        <div class="catalog-categories-list">
          {% for collection in collections %}
            {% if collection.handle != 'frontpage' and collection.handle != 'all' %}
              <a href="{{ collection.url }}" class="catalog-category-item">
                <div class="catalog-category-image-wrapper">
                  {% if collection.image %}
                    <div class="catalog-category-image">
                      <img src="{{ collection.image | img_url: 'medium' }}" alt="{{ collection.title }}" loading="lazy">
                    </div>
                  {% else %}
                    <div class="catalog-category-image placeholder">
                      <span>{{ collection.title | slice: 0, 1 | upcase }}</span>
                    </div>
                  {% endif %}
                </div>
                <span class="catalog-category-title">{{ collection.title }}</span>
              </a>
            {% endif %}
          {% endfor %}
        </div>
      </div>
    </div>
  </div>
  
  <!-- Search bar section - Now below categories -->
  <div class="catalog-search-container">
    <div class="container">
      <div class="search-input-wrapper">
        <input type="search" id="catalogSearchInput" placeholder="Search for products..." class="catalog-search-input" aria-label="Search">
        <button type="button" id="catalogSearchButton" class="catalog-search-button" aria-label="Search">
          <i class="fas fa-search"></i>
        </button>
        <button type="button" id="clearSearchButton" class="catalog-clear-search-button" aria-label="Clear search">
          <i class="fas fa-times"></i>
        </button>
      </div>
    </div>
  </div>
  
  <!-- Products grid section -->
  <div class="catalog-products-container">
    <div class="container">
      <div class="catalog-header">
        <h2 class="catalog-section-title">All Products</h2>
        
        <!-- Filter and Sort Controls -->
        <div class="catalog-controls">
          <div class="catalog-sort">
            <select id="sortBy" class="catalog-sort-select">
              <option value="manual">Featured</option>
              <option value="price-ascending">Price: Low to High</option>
              <option value="price-descending">Price: High to Low</option>
              <option value="title-ascending">Alphabetically: A-Z</option>
              <option value="title-descending">Alphabetically: Z-A</option>
              <option value="created-descending">Date: New to Old</option>
              <option value="created-ascending">Date: Old to New</option>
              <option value="best-selling">Best Selling</option>
            </select>
            <i class="fas fa-chevron-down sort-icon"></i>
          </div>
          
          <button id="filterToggle" class="catalog-filter-toggle">
            <i class="fas fa-filter"></i>
            <span>Filter</span>
          </button>
        </div>
      </div>
      
      <!-- Filter Drawer -->
      <div id="filterDrawer" class="catalog-filter-drawer">
        <div class="filter-drawer-header">
          <h3>Filter Products</h3>
          <button id="closeFilter" class="close-filter">
            <i class="fas fa-times"></i>
          </button>
        </div>
        
        <div class="filter-drawer-content">
          <!-- Price Range Filter -->
          <div class="filter-group">
            <h4 class="filter-title">Price Range</h4>
            <div class="price-range-inputs">
              <div class="price-input">
                <label for="priceMin">From</label>
                <input type="number" id="priceMin" min="0" placeholder="Min">
              </div>
              <div class="price-input">
                <label for="priceMax">To</label>
                <input type="number" id="priceMax" min="0" placeholder="Max">
              </div>
            </div>
          </div>
          
          <!-- Availability Filter -->
          <div class="filter-group">
            <h4 class="filter-title">Availability</h4>
            <div class="filter-options">
              <label class="filter-checkbox">
                <input type="checkbox" id="inStock">
                <span class="checkbox-custom"></span>
                <span class="checkbox-label">In stock</span>
              </label>
              <label class="filter-checkbox">
                <input type="checkbox" id="outOfStock">
                <span class="checkbox-custom"></span>
                <span class="checkbox-label">Out of stock</span>
              </label>
            </div>
          </div>
          
          <!-- On Sale Filter -->
          <div class="filter-group">
            <h4 class="filter-title">Product Status</h4>
            <div class="filter-options">
              <label class="filter-checkbox">
                <input type="checkbox" id="onSale">
                <span class="checkbox-custom"></span>
                <span class="checkbox-label">On sale</span>
              </label>
            </div>
          </div>
        </div>
        
        <div class="filter-drawer-footer">
          <button id="applyFilters" class="apply-filters-btn">Apply Filters</button>
          <button id="clearFilters" class="clear-filters-btn">Clear All</button>
        </div>
      </div>
      
      <div class="catalog-products-grid">
        {% paginate collections.all.products by 12 %}
          {% for product in collections.all.products %}
            <div class="catalog-product-card" 
                 data-price="{{ product.price }}" 
                 data-available="{{ product.available }}" 
                 data-on-sale="{% if product.compare_at_price > product.price %}true{% else %}false{% endif %}">
              <a href="{{ product.url }}" class="catalog-product-link">
                <div class="catalog-product-image-container">
                  {% if product.featured_image %}
                    <img src="{{ product.featured_image | img_url: 'medium' }}" alt="{{ product.title }}" class="catalog-product-image" loading="lazy">
                  {% else %}
                    <div class="catalog-product-image-placeholder">
                      <i class="fas fa-image"></i>
                    </div>
                  {% endif %}
                  
                  {% if product.compare_at_price > product.price %}
                    <span class="catalog-product-badge sale">Sale</span>
                  {% endif %}
                  
                  {% if product.available == false %}
                    <span class="catalog-product-badge sold-out">Sold out</span>
                  {% endif %}
                </div>
                
                <div class="catalog-product-info">
                  <h3 class="catalog-product-title">{{ product.title }}</h3>
                  
                  <div class="catalog-product-price">
                    {% if product.compare_at_price > product.price %}
                      <span class="catalog-product-price-sale">{{ product.price | money }}</span>
                      <span class="catalog-product-price-compare">{{ product.compare_at_price | money }}</span>
                    {% else %}
                      <span class="catalog-product-price-regular">{{ product.price | money }}</span>
                    {% endif %}
                  </div>
                </div>
              </a>
              
              <div class="catalog-product-actions">
                {% if product.available %}
                  <form method="post" action="/cart/add" class="catalog-add-to-cart-form">
                    <input type="hidden" name="id" value="{{ product.variants.first.id }}">
                    <input type="hidden" name="quantity" value="1">
                    <button type="submit" class="catalog-add-to-cart-button">
                      <i class="fas fa-shopping-bag"></i>
                      <span>Add to Cart</span>
                    </button>
                  </form>
                {% else %}
                  <button class="catalog-add-to-cart-button disabled" disabled>
                    <i class="fas fa-shopping-bag"></i>
                    <span>Sold Out</span>
                  </button>
                {% endif %}
              </div>
            </div>
          {% endfor %}
          
          {% if paginate.pages > 1 %}
            <div class="catalog-pagination">
              {{ paginate | default_pagination }}
            </div>
          {% endif %}
        {% endpaginate %}
      </div>
    </div>
  </div>
</div>

<style>
  .catalog-page {
    padding-bottom: 80px; /* Space for mobile navbar */
  }
  
  .container {
    padding-left: 15px;
    padding-right: 15px;
    max-width: 100%;
    width: 100%;
    margin: 0 auto;
  }
  
  /* Categories Styles - Instagram-inspired */
  .catalog-categories-container {
    padding: 15px 0 10px;
    background-color: #fff;
    border-bottom: 1px solid #f0f0f0;
  }
  
  .catalog-categories-wrapper {
    position: relative;
    overflow: hidden;
  }
  
  .catalog-categories-list {
    display: flex;
    overflow-x: auto;
    scroll-behavior: smooth;
    -webkit-overflow-scrolling: touch;
    scrollbar-width: none; /* Firefox */
    padding: 5px 0;
    margin: 0 -5px; /* Negative margin to offset item margin */
  }
  
  .catalog-categories-list::-webkit-scrollbar {
    display: none; /* Chrome, Safari, Edge */
  }
  
  .catalog-category-item {
    flex: 0 0 auto;
    display: flex;
    flex-direction: column;
    align-items: center;
    margin: 0 8px;
    text-decoration: none;
    width: 75px;
  }
  
  .catalog-category-image-wrapper {
    width: 70px;
    height: 70px;
    border-radius: 50%;
    overflow: hidden;
    position: relative;
    background: linear-gradient(45deg, #f09433, #e6683c, #dc2743, #cc2366, #bc1888);
    padding: 2px;
    margin-bottom: 8px;
  }
  
  .catalog-category-image {
    width: 100%;
    height: 100%;
    border-radius: 50%;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #f8f8f8;
    border: 2px solid white;
  }
  
  .catalog-category-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  .catalog-category-image.placeholder {
    background-color: #f8f8f8;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .catalog-category-image.placeholder span {
    font-size: 24px;
    font-weight: 600;
    color: #ff6b9a;
  }
  
  .catalog-category-title {
    font-size: 12px;
    color: #333;
    text-align: center;
    max-width: 75px;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  
  /* Search Bar Styles */
  .catalog-search-container {
    padding: 12px 0;
    background-color: #fff;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
    position: sticky;
    top: 0;
    z-index: 10;
  }
  
  .search-input-wrapper {
    position: relative;
    display: flex;
    align-items: center;
  }
  
  .catalog-search-input {
    width: 100%;
    padding: 12px 45px 12px 15px;
    border: 1px solid #f0f0f0;
    border-radius: 25px;
    font-size: 16px;
    background-color: #f9f9f9;
    transition: all 0.3s ease;
  }
  
  .catalog-search-input:focus {
    outline: none;
    border-color: #ff6b9a;
    background-color: #fff;
    box-shadow: 0 0 0 3px rgba(255, 107, 154, 0.1);
  }
  
  .catalog-search-button {
    position: absolute;
    right: 5px;
    top: 50%;
    transform: translateY(-50%);
    background: none;
    border: none;
    color: #777;
    font-size: 18px;
    padding: 10px;
    cursor: pointer;
    transition: color 0.3s ease;
  }
  
  .catalog-search-button:hover {
    color: #ff6b9a;
  }
  
  .catalog-clear-search-button {
    position: absolute;
    right: 40px;
    top: 50%;
    transform: translateY(-50%);
    background: none;
    border: none;
    color: #777;
    font-size: 16px;
    padding: 10px;
    cursor: pointer;
    transition: color 0.3s ease;
    display: none;
  }
  
  .catalog-clear-search-button:hover {
    color: #ff6b9a;
  }
  
  .catalog-clear-search-button.visible {
    display: block;
  }
  
  /* Products Grid Styles */
  .catalog-products-container {
    padding: 15px 0;
    background-color: #f9f9f9;
  }
  
  .catalog-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
    flex-wrap: wrap;
  }
  
  .catalog-section-title {
    font-size: 20px;
    font-weight: 600;
    color: #333;
    margin: 0;
  }
  
  .catalog-controls {
    display: flex;
    align-items: center;
    gap: 10px;
  }
  
  .catalog-sort {
    position: relative;
  }
  
  .catalog-sort-select {
    appearance: none;
    background-color: #fff;
    border: 1px solid #e0e0e0;
    border-radius: 5px;
    padding: 8px 30px 8px 12px;
    font-size: 14px;
    cursor: pointer;
  }
  
  .sort-icon {
    position: absolute;
    right: 10px;
    top: 50%;
    transform: translateY(-50%);
    pointer-events: none;
    color: #777;
  }
  
  .catalog-filter-toggle {
    display: flex;
    align-items: center;
    gap: 5px;
    background-color: #fff;
    border: 1px solid #e0e0e0;
    border-radius: 5px;
    padding: 8px 12px;
    font-size: 14px;
    cursor: pointer;
  }
  
  /* Filter Drawer */
  .catalog-filter-drawer {
    position: fixed;
    top: 0;
    right: -100%;
    width: 85%;
    max-width: 350px;
    height: 100%;
    background-color: #fff;
    z-index: 1000;
    box-shadow: -2px 0 10px rgba(0, 0, 0, 0.1);
    transition: right 0.3s ease;
    display: flex;
    flex-direction: column;
  }
  
  .catalog-filter-drawer.open {
    right: 0;
  }
  
  .filter-drawer-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 15px;
    border-bottom: 1px solid #f0f0f0;
  }
  
  .filter-drawer-header h3 {
    margin: 0;
    font-size: 18px;
    font-weight: 600;
  }
  
  .close-filter {
    background: none;
    border: none;
    font-size: 20px;
    cursor: pointer;
    color: #777;
  }
  
  .filter-drawer-content {
    flex: 1;
    overflow-y: auto;
    padding: 15px;
  }
  
  .filter-group {
    margin-bottom: 20px;
  }
  
  .filter-title {
    font-size: 16px;
    font-weight: 600;
    margin: 0 0 10px;
    color: #333;
  }
  
  .price-range-inputs {
    display: flex;
    gap: 10px;
  }
  
  .price-input {
    flex: 1;
  }
  
  .price-input label {
    display: block;
    font-size: 12px;
    margin-bottom: 5px;
    color: #777;
  }
  
  .price-input input {
    width: 100%;
    padding: 8px;
    border: 1px solid #e0e0e0;
    border-radius: 5px;
    font-size: 14px;
  }
  
  .filter-options {
    display: flex;
    flex-direction: column;
    gap: 10px;
  }
  
  .filter-checkbox {
    display: flex;
    align-items: center;
    cursor: pointer;
  }
  
  .filter-checkbox input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
  }
  
  .checkbox-custom {
    position: relative;
    display: inline-block;
    width: 18px;
    height: 18px;
    background-color: #fff;
    border: 1px solid #e0e0e0;
    border-radius: 3px;
    margin-right: 10px;
  }
  
  .filter-checkbox input:checked ~ .checkbox-custom:after {
    content: '';
    position: absolute;
    display: block;
    left: 6px;
    top: 2px;
    width: 5px;
    height: 10px;
    border: solid #ff6b9a;
    border-width: 0 2px 2px 0;
    transform: rotate(45deg);
  }
  
  .checkbox-label {
    font-size: 14px;
    color: #333;
  }
  
  .filter-drawer-footer {
    padding: 15px;
    border-top: 1px solid #f0f0f0;
    display: flex;
    gap: 10px;
  }
  
  .apply-filters-btn {
    flex: 1;
    background-color: #ff6b9a;
    color: white;
    border: none;
    border-radius: 5px;
    padding: 10px;
    font-size: 14px;
    font-weight: 600;
    cursor: pointer;
  }
  
  .clear-filters-btn {
    background-color: #f0f0f0;
    color: #333;
    border: none;
    border-radius: 5px;
    padding: 10px;
    font-size: 14px;
    font-weight: 600;
    cursor: pointer;
  }
  
  /* Overlay for filter drawer */
  .filter-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 999;
    display: none;
  }
  
  .filter-overlay.active {
    display: block;
  }
  
  .catalog-products-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-gap: 15px;
  }
  
  .catalog-product-card {
    background-color: #fff;
    border-radius: 10px;
    overflow: hidden;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }
  
  .catalog-product-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  }
  
  .catalog-product-link {
    text-decoration: none;
    color: inherit;
    display: block;
  }
  
  .catalog-product-image-container {
    position: relative;
    padding-top: 100%; /* 1:1 Aspect Ratio */
    overflow: hidden;
  }
  
  .catalog-product-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s ease;
  }
  
  .catalog-product-card:hover .catalog-product-image {
    transform: scale(1.05);
  }
  
  .catalog-product-image-placeholder {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #f8f8f8;
    color: #ddd;
    font-size: 30px;
  }
  
  .catalog-product-badge {
    position: absolute;
    top: 10px;
    right: 10px;
    padding: 5px 10px;
    border-radius: 15px;
    font-size: 12px;
    font-weight: 600;
    color: white;
  }
  
  .catalog-product-badge.sale {
    background-color: #ff6b9a;
  }
  
  .catalog-product-badge.sold-out {
    background-color: #999;
  }
  
  .catalog-product-info {
    padding: 15px;
  }
  
  .catalog-product-title {
    font-size: 14px;
    font-weight: 500;
    margin: 0 0 10px;
    color: #333;
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    line-height: 1.3;
    height: 36px;
  }
  
  .catalog-product-price {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    gap: 5px;
  }
  
  .catalog-product-price-regular {
    font-weight: 600;
    color: #333;
  }
  
  .catalog-product-price-sale {
    font-weight: 600;
    color: #ff6b9a;
  }
  
  .catalog-product-price-compare {
    font-size: 12px;
    color: #999;
    text-decoration: line-through;
  }
  
  .catalog-product-actions {
    padding: 0 15px 15px;
  }
  
  .catalog-add-to-cart-form {
    width: 100%;
  }
  
  .catalog-add-to-cart-button {
    width: 100%;
    background-color: #ff6b9a;
    color: white;
    border: none;
    border-radius: 5px;
    padding: 10px;
    font-size: 14px;
    font-weight: 600;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }
  
  .catalog-add-to-cart-button:hover {
    background-color: #e1306c;
  }
  
  .catalog-add-to-cart-button i {
    margin-right: 5px;
  }
  
  .catalog-add-to-cart-button.disabled {
    background-color: #ccc;
    cursor: not-allowed;
  }
  
  /* Pagination Styles */
  .catalog-pagination {
    grid-column: 1 / -1;
    margin-top: 30px;
    text-align: center;
  }
  
  /* Media Queries */
  @media (min-width: 768px) {
    .container {
      max-width: 720px;
    }
    
    .catalog-products-grid {
      grid-template-columns: repeat(3, 1fr);
      grid-gap: 20px;
    }
    
    .catalog-section-title {
      font-size: 24px;
    }
  }
  
  @media (min-width: 992px) {
    .container {
      max-width: 960px;
    }
    
    .catalog-products-grid {
      grid-template-columns: repeat(4, 1fr);
    }
  }
  
  @media (min-width: 1200px) {
    .container {
      max-width: 1140px;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Filter drawer functionality
    const filterToggle = document.getElementById('filterToggle');
    const filterDrawer = document.getElementById('filterDrawer');
    const closeFilter = document.getElementById('closeFilter');
    const applyFilters = document.getElementById('applyFilters');
    const clearFilters = document.getElementById('clearFilters');
    
    // Create overlay element
    const overlay = document.createElement('div');
    overlay.className = 'filter-overlay';
    document.body.appendChild(overlay);
    
    // Open filter drawer
    filterToggle.addEventListener('click', function() {
      filterDrawer.classList.add('open');
      overlay.classList.add('active');
      document.body.style.overflow = 'hidden';
    });
    
    // Close filter drawer
    function closeFilterDrawer() {
      filterDrawer.classList.remove('open');
      overlay.classList.remove('active');
      document.body.style.overflow = '';
    }
    
    closeFilter.addEventListener('click', closeFilterDrawer);
    overlay.addEventListener('click', closeFilterDrawer);
    
    // Search functionality
    const searchInput = document.getElementById('catalogSearchInput');
    const searchButton = document.getElementById('catalogSearchButton');
    const clearSearchButton = document.getElementById('clearSearchButton');
    
    function performSearch() {
      const searchTerm = searchInput.value.toLowerCase().trim();
      const productCards = document.querySelectorAll('.catalog-product-card');
      
      // Toggle clear button visibility
      if (searchTerm !== '') {
        clearSearchButton.classList.add('visible');
      } else {
        clearSearchButton.classList.remove('visible');
      }
      
      if (searchTerm === '') {
        // If search is empty, show all products
        productCards.forEach(card => {
          card.style.display = 'block';
        });
        return;
      }
      
      // Filter products based on search term
      productCards.forEach(card => {
        const productTitle = card.querySelector('.catalog-product-title').textContent.toLowerCase();
        if (productTitle.includes(searchTerm)) {
          card.style.display = 'block';
        } else {
          card.style.display = 'none';
        }
      });
    }
    
    // Clear search function
    function clearSearch() {
      searchInput.value = '';
      clearSearchButton.classList.remove('visible');
      
      // Show all products
      const productCards = document.querySelectorAll('.catalog-product-card');
      productCards.forEach(card => {
        card.style.display = 'block';
      });
      
      // Focus back on search input
      searchInput.focus();
    }
    
    // Search on button click
    searchButton.addEventListener('click', performSearch);
    
    // Clear search on clear button click
    clearSearchButton.addEventListener('click', clearSearch);
    
    // Search on Enter key press and show clear button when typing
    searchInput.addEventListener('keyup', function(event) {
      if (event.key === 'Enter') {
        performSearch();
      } else {
        // Show/hide clear button based on input content
        if (this.value !== '') {
          clearSearchButton.classList.add('visible');
        } else {
          clearSearchButton.classList.remove('visible');
          // Show all products when search is cleared
          const productCards = document.querySelectorAll('.catalog-product-card');
          productCards.forEach(card => {
            card.style.display = 'block';
          });
        }
      }
    });
    
    // Apply filters
    applyFilters.addEventListener('click', function() {
      const minPrice = document.getElementById('priceMin').value;
      const maxPrice = document.getElementById('priceMax').value;
      const inStock = document.getElementById('inStock').checked;
      const outOfStock = document.getElementById('outOfStock').checked;
      const onSale = document.getElementById('onSale').checked;
      
      const productCards = document.querySelectorAll('.catalog-product-card');
      
      productCards.forEach(function(card) {
        let shouldShow = true;
        const price = parseInt(card.dataset.price) / 100; // Convert cents to dollars
        const available = card.dataset.available === 'true';
        const isOnSale = card.dataset.onSale === 'true';
        
        // Price filter
        if (minPrice && price < minPrice) shouldShow = false;
        if (maxPrice && price > maxPrice) shouldShow = false;
        
        // Availability filter
        if (inStock && !outOfStock && !available) shouldShow = false;
        if (!inStock && outOfStock && available) shouldShow = false;
        if (!inStock && !outOfStock) shouldShow = true; // No availability filter selected
        
        // Sale filter
        if (onSale && !isOnSale) shouldShow = false;
        
        // Only update display if the card is currently visible (not filtered by search)
        if (card.style.display !== 'none' || card.style.display === '') {
          card.style.display = shouldShow ? 'block' : 'none';
        }
      });
      
      closeFilterDrawer();
    });
    
    // Clear filters
    clearFilters.addEventListener('click', function() {
      document.getElementById('priceMin').value = '';
      document.getElementById('priceMax').value = '';
      document.getElementById('inStock').checked = false;
      document.getElementById('outOfStock').checked = false;
      document.getElementById('onSale').checked = false;
      
      // Only show products that match the current search term
      const searchTerm = searchInput.value.toLowerCase().trim();
      const productCards = document.querySelectorAll('.catalog-product-card');
      
      if (searchTerm === '') {
        // If no search term, show all products
        productCards.forEach(function(card) {
          card.style.display = 'block';
        });
      } else {
        // Otherwise, only show products that match the search
        productCards.forEach(function(card) {
          const productTitle = card.querySelector('.catalog-product-title').textContent.toLowerCase();
          card.style.display = productTitle.includes(searchTerm) ? 'block' : 'none';
        });
      }
    });
    
    // Sort functionality
    const sortSelect = document.getElementById('sortBy');
    
    sortSelect.addEventListener('change', function() {
      const value = this.value;
      const productGrid = document.querySelector('.catalog-products-grid');
      const productCards = Array.from(document.querySelectorAll('.catalog-product-card'));
      
      // Sort products based on selected option
      productCards.sort(function(a, b) {
        if (value === 'price-ascending') {
          return parseInt(a.dataset.price) - parseInt(b.dataset.price);
        } else if (value === 'price-descending') {
          return parseInt(b.dataset.price) - parseInt(a.dataset.price);
        } else if (value === 'title-ascending') {
          return a.querySelector('.catalog-product-title').textContent.localeCompare(b.querySelector('.catalog-product-title').textContent);
        } else if (value === 'title-descending') {
          return b.querySelector('.catalog-product-title').textContent.localeCompare(a.querySelector('.catalog-product-title').textContent);
        } else if (value === 'best-selling') {
          // Best selling would require additional data from Shopify
          return 0;
        } else {
          // Default to manual/featured
          return 0;
        }
      });
      
      // Remove all products from the grid
      while (productGrid.firstChild) {
        productGrid.removeChild(productGrid.firstChild);
      }
      
      // Add sorted products back to the grid
      productCards.forEach(function(card) {
        productGrid.appendChild(card);
      });
      
      // Reapply current search filter
      performSearch();
    });
  });
</script>
